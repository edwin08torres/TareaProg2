/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import ClassIO.IOString;
import Paneles.EditorPnl;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.AttributeSet;
import javax.swing.text.Element;
import javax.swing.text.MutableAttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import ni.uni.edu.programacion.views.panels.PnlEditor;
import say.swing.JFontChooser;

/**
 *
 * @author at289
 */
public class FmdEditor extends javax.swing.JFrame {
   private int counTab; 
   private JFileChooser fileChooser;
    private IOString ioString;
    private JFontChooser fontChooser;
private FileNameExtensionFilter fileNameFileFilter;
    /**
     * Creates new form FmdEditor
     */
    public FmdEditor() {
         counTab = 1;
        initComponents();
    }

    public JTabbedPane getTbpContenido() {
        return TbpContenido;
    }

    public JButton getBtnClose() {
        return btnClose;
    }

    public JMenuItem getBtnExit() {
        return btnExit;
    }

    public JMenuItem getBtnNew() {
        return btnNew;
    }

    public JMenuItem getBtnOpen() {
        return btnOpen;
    }

    public JMenuItem getBtnSave() {
        return btnSave;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TbpContenido = new javax.swing.JTabbedPane();
        jToolBar1 = new javax.swing.JToolBar();
        btnClose = new javax.swing.JButton();
        btnBold = new javax.swing.JButton();
        btnPlain = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        btnNew = new javax.swing.JMenuItem();
        btnOpen = new javax.swing.JMenuItem();
        btnSave = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        btnExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        ChangedFormat = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().add(TbpContenido, java.awt.BorderLayout.CENTER);

        jToolBar1.setRollover(true);

        btnClose.setText("X");
        btnClose.setFocusable(false);
        btnClose.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnClose.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        jToolBar1.add(btnClose);

        btnBold.setText("Bold");
        btnBold.setFocusable(false);
        btnBold.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBold.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBoldActionPerformed(evt);
            }
        });
        jToolBar1.add(btnBold);

        btnPlain.setText("Plain");
        btnPlain.setFocusable(false);
        btnPlain.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPlain.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPlain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlainActionPerformed(evt);
            }
        });
        jToolBar1.add(btnPlain);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jMenu1.setText("File");

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        jMenu1.add(btnNew);

        btnOpen.setText("Open");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });
        jMenu1.add(btnOpen);

        btnSave.setText("Save us");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jMenu1.add(btnSave);
        jMenu1.add(jSeparator1);

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        jMenu1.add(btnExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        ChangedFormat.setText("Format");
        ChangedFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangedFormatActionPerformed(evt);
            }
        });
        jMenu2.add(ChangedFormat);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
       if(TbpContenido.getComponentCount()<=0){
           return;
       }
             int option = JOptionPane.showConfirmDialog(null, " r u delete this tab?","Confirm Dialog",JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
                    
                     
                     
                     if(option == 1){
                         return;
                     }
       int index = TbpContenido.getSelectedIndex();
               TbpContenido.remove(index);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
   EditorPnl pnle = new EditorPnl();
      
      TbpContenido.addTab("Trash" +counTab++,pnle);
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        JFileChooser fc = new JFileChooser();
       EditorPnl pnle = (EditorPnl) TbpContenido.getSelectedComponent();
       int index = TbpContenido.getSelectedIndex();
       if(pnle == null){
           return;
       }
       try{
//        FileNameExtensionFilter filtro = new FileNameExtensionFilter(".TXT", "txt");
       
       int selecc = fc.showSaveDialog(this);
       
       if(selecc == JFileChooser.CANCEL_OPTION){
           return;
       }
           File fichero = fc.getSelectedFile();
           ioString = new IOString(fichero);
           
           ioString.writeString(pnle.getTxtEditor().getText(), false);
           
           //this.Open.setText(fichero.getAbsolutePath());
                
          //try(FileWriter fw = new FileWriter(fichero)){
            //        fw.write(this.TxtEditor.getText());
           
                          TbpContenido.setTitleAt(index, fichero.getName());
                }
       catch(IOException e){
          Logger.getLogger(FmdEditor.class.getName()).log(Level.SEVERE ,  null , e);               
       }
           
       
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
       JFileChooser fc = new JFileChooser();
       
     //   FileNameExtensionFilter filtro = new FileNameExtensionFilter(".TXT", "txt");
       
       int selecc = fc.showOpenDialog(this);
       
       if(selecc == JFileChooser.APPROVE_OPTION){
           
           File fichero = fc.getSelectedFile();
           ioString = new IOString(fichero);
           
           this. btnOpen.setText(fichero.getAbsolutePath());
                EditorPnl pnle = new EditorPnl();
           try{
               pnle.getTxtEditor().setText(ioString.readString());
           }
           catch(IOException e){
               Logger.getLogger(FmdEditor.class.getName()).log(Level.SEVERE , null, e);
           }
             TbpContenido.addTab(fc.getName(), pnle );
       }
    }//GEN-LAST:event_btnOpenActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        int opcion = JOptionPane.showConfirmDialog(null,
                "Está seguro que quiere cerrar la aplicación?",
                "Confirmación de cierre", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);
        
        if (opcion==JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnBoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBoldActionPerformed
        PnlEditor pnlEditor = (PnlEditor) TbpContenido.getSelectedComponent();
        if (pnlEditor == null) {
            return;
        }

        String text = pnlEditor.getTxtpEditor().getSelectedText();
        if (text == null) {
            return;
        }

        int start = pnlEditor.getTxtpEditor().getSelectionStart();
        StyledDocument style = pnlEditor.getTxtpEditor().getStyledDocument();

        Font font = new Font(Font.SERIF, btnBold.isSelected() ? Font.BOLD : Font.PLAIN, 12);        
        pnlEditor.getTxtpEditor().setStyledDocument(getStyledDocuemt(font,style, start, text.length()));
        

    }//GEN-LAST:event_btnBoldActionPerformed

    private void ChangedFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangedFormatActionPerformed
    PnlEditor pnlEditor = (PnlEditor) TbpContenido.getSelectedComponent();
        if (pnlEditor == null) {
            return;
        }

        int option = getFontChooser().showDialog(this);
        if (option == JFontChooser.CANCEL_OPTION) {
            return;
        }

        String text = pnlEditor.getTxtpEditor().getSelectedText();
        if (text == null) {
            return;
        }

        Font font = getFontChooser().getSelectedFont();
        int start = pnlEditor.getTxtpEditor().getSelectionStart();
        StyledDocument style = pnlEditor.getTxtpEditor().getStyledDocument();
        pnlEditor.getTxtpEditor().setStyledDocument(getStyledDocuemt(font, style, start, text.length()));
    }//GEN-LAST:event_ChangedFormatActionPerformed

    private void btnPlainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPlainActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FmdEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FmdEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FmdEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FmdEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FmdEditor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ChangedFormat;
    private javax.swing.JTabbedPane TbpContenido;
    private javax.swing.JButton btnBold;
    private javax.swing.JButton btnClose;
    private javax.swing.JMenuItem btnExit;
    private javax.swing.JMenuItem btnNew;
    private javax.swing.JMenuItem btnOpen;
    private javax.swing.JButton btnPlain;
    private javax.swing.JMenuItem btnSave;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

  private StyledDocument getStyledDocuemt(Font font, StyledDocument style, int start, int length){
        MutableAttributeSet attributeSet = getMutableAttributeSet(style, start);        
        
        attributeSet.addAttribute(StyleConstants.Bold, font.isBold());
        attributeSet.addAttribute(StyleConstants.Italic, font.isItalic());
        attributeSet.addAttribute(StyleConstants.Size, font.getSize());
        attributeSet.addAttribute(StyleConstants.Family, font.getFamily());
        attributeSet.addAttribute(StyleConstants.Alignment, StyleConstants.ALIGN_JUSTIFIED);
        
        style.setCharacterAttributes(start, length, attributeSet, true);
        
        return style;        
    }
  private MutableAttributeSet getMutableAttributeSet(StyledDocument style, int start) {
        Element element = style.getCharacterElement(start);
        AttributeSet as = element.getAttributes();
        
        return new SimpleAttributeSet(as.copyAttributes());
    }
    private JFileChooser getFileChooser() {
        if (fileChooser == null) {
            fileChooser = new JFileChooser();
            fileChooser.addChoosableFileFilter(fileNameFileFilter);
            fileChooser.setFileFilter(fileNameFileFilter);
        }

        return fileChooser;
    }

    private JFontChooser getFontChooser() {
        if (fontChooser == null) {
            fontChooser = new JFontChooser();
        }
        return fontChooser;
    }
}
